Journal - Egene Oletu (z5059371)

10/10/2019:
Started setting up the MySQL server. So far created the user table, and started
coding the manager functions for it.

11/10/2019:
Wrote and tested new methods to add, delete, and edit entries in the users
table.

13/10/2019:
Refactored code. Added events table to database, basing the schema off the
event class defined in the EventBranch branch. Also wrote creat/delete event
methods. New code not tested.

14/10/2019:
Refactored code. Added events update methods and fixed syntax errors in some
of the sql statements used in the code. Did some basic testing of some methods.

15-16/10/2019:
Refactored code. Finished writing basic getters/setters for events and users
tables. Also wrote a test script for all the methods.

21/10/2019:
Added invites table to represent status of invites users have received for
events. Updated getUser function to require an email and password to retrieve
user information. getUser and getEvent methods return a User and Event object
respectively.

28/10/2019:
Changed getter functions in DatabaseManager to return tuples again to simplify
the system. Added loadUser method to PracticalManager which loads a user and
their events and calendars into appropriate classes.

01/11/2019:
Pulled class definitions from master to my branch. Implemented login/logout
and database update methods in practicalManager. Once tested, can merge to
master for complete integration into frontend.

05/11/2019:
Added methods for handling invites and notifications to PractiCalManager and
did some tests on the updated database.

06/11/2019:
Added category and location fields to events table. Added addEvent method.
Refactoring and several bug fixes (mainly syntax errors). Tested code and
merged DatabaseIntegrationBranch with master.

11/11/2019:
Worked on getting login working in views with PractiCalManager.

12/11/2019:
Moved invites from User to Calendar class. Changed user credential checking
method in database manager to check hashed passwords. Get user method in db
manager now returns user data using and id or email rather than an email and
password. Moved event loading to a sepeate function in PractiCalManager to
remove duplicate code in login method. Worked on fixing bugs in
views and PractiCalManager.

16/11/2019:
Changed start and end datetime field type in database to string and changed date
values in events test data. Code refactoring while trying to find the bug thats
causing events to be duplicated in all calendars.

17/11/2019:
Fixed bug that was causing events to appear duplicated in all calendars; was
caused by the the use of a mutable object ([] empty list) being used as the
default value for the events paramater in the Calendar class __init__ method,
creating a single object shared between all instances of Calendar. Create, edit,
and delete event functionality working between front and backend and is
persistent in the database. Fixed some inconsistencies in test data being loaded
into database during initialisation.
